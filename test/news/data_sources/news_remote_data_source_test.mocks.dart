// Mocks generated by Mockito 5.4.4 from annotations
// in nyt/test/news/data_sources/news_remote_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dio/dio.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nyt/core/error/failure.dart' as _i5;
import 'package:nyt/core/service/remote/dio_consumer.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DioConsumer].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioConsumer extends _i1.Mock implements _i3.DioConsumer {
  MockDioConsumer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, dynamic>> get(
    String? uri, {
    Map<String, dynamic>? queryParameters,
    Map<String, dynamic>? data,
    _i6.FormData? formData,
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [uri],
          {
            #queryParameters: queryParameters,
            #data: data,
            #formData: formData,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, dynamic>>.value(
            _FakeEither_0<_i5.Failure, dynamic>(
          this,
          Invocation.method(
            #get,
            [uri],
            {
              #queryParameters: queryParameters,
              #data: data,
              #formData: formData,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, dynamic>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, dynamic>> post(
    String? uri, {
    Map<String, dynamic>? queryParameters,
    Map<String, dynamic>? data,
    _i6.FormData? formData,
    _i6.Options? options,
    _i6.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [uri],
          {
            #queryParameters: queryParameters,
            #data: data,
            #formData: formData,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, dynamic>>.value(
            _FakeEither_0<_i5.Failure, dynamic>(
          this,
          Invocation.method(
            #post,
            [uri],
            {
              #queryParameters: queryParameters,
              #data: data,
              #formData: formData,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, dynamic>>);
}
